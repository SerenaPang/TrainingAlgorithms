Get the list of keys in a given binary tree layer by layer in zig-zag order.

Examples

        5

      /    \

    3        8

  /   \        \

 1     4        11

the result is [5, 3, 8, 11, 4, 1]

Corner Cases

What if the binary tree is null? Return an empty list in this case.
How is the binary tree represented?

We use the level order traversal sequence with a special symbol "#" denoting the null node.

For Example:

The sequence [1, 2, 3, #, #, 4] represents the following binary tree:

    1

  /   \

 2     3

      /

    4




 0                   5

 1             3         10

 2           1   6      4   2

 3              7  9   13     24

 当我们在even level时，要从后往前打印，所以poll要poll last。 由于我们poll last，所以不能poll last的时候在后面加新元素（offer last），
 我们知道我们是offer first，不然就乱了。
 所以poll last 的cur generate出来的元素就是下一层odd level的元素。
 然而我们poll last就会导致下一层是从后往前加入deque的顺序（也就是看右再看左）。


 然而在odd层我们是从前往后打印，（打印就是poll first），所以我们poll first


先读右树还是先读左树取决于上一层打印的顺序，如果是后往前打印，那就是先右再左。
如果是前往后打印，那就是先左再右。














